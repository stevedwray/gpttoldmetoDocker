---
- name: Include vars for (Registry)
  include_vars:
    file: registry.yml

- name: Create certificates directory (Registry)
  file:
    path: "{{ registry.volumes.certs }}"
    state: directory

- name: Ensure necessary directories exist (Registry)
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - "{{ registry.volumes.certs }}"
    - "{{ registry.volumes.auth }}"
  become: yes

- name: Generate a private key (Registry)
  community.crypto.openssl_privatekey:
    path: /srv/usb/registry/certs/private.key
    size: 2048
  become: yes

- name: Generate CSR (Registry)
  community.crypto.openssl_csr:
    path: /srv/usb/registry/certs/registry.csr
    privatekey_path: /srv/usb/registry/certs/private.key
    common_name: "{{ registry.subject_alt_name }}"
    country_name: "{{ registry.c }}"
    state_or_province_name: "{{ registry.st }}"
    locality_name: "{{ registry.l }}"
    organization_name: "{{ registry.o }}"
    organizational_unit_name: "{{ registry.ou }}"
  become: yes

- name: Generate a self-signed certificate (Registry)
  community.crypto.x509_certificate:
    path: /srv/usb/registry/certs/registry.crt
    privatekey_path: /srv/usb/registry/certs/private.key
    csr_path: /srv/usb/registry/certs/registry.csr
    provider: selfsigned
    selfsigned_not_after: "+3650d"
    selfsigned_not_before: "+0s"
    selfsigned_version: 3
    owner: root
    group: root
    mode: '0644'
  become: yes
  
- name: Create auth directory (Registry)
  file:
    path: "{{ registry.volumes.auth }}"
    state: directory
    
- name: Install passlib library (Registry)
  package:
    name:
      - python3-passlib
    state: present

- name: Generate htpasswd file (Registry)
  community.general.htpasswd:
    path: "{{ registry.volumes.auth }}/htpasswd"
    name: "{{ registry_username }}"
    password: "{{ registry_password }}"
    state: present
    mode: '0600'
    owner: root
    group: www-data

