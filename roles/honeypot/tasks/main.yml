---
- name: Install dependencies on argon01
  delegate_to: "{{ honeypot.build.tanner.host }}"
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - git
    - docker-ce
    - docker-ce-cli
    - containerd.io
    - python3-dev
    - pip
    
- name: Install Docker library
  delegate_to: "{{ honeypot.build.tanner.host }}"
  pip:
    name: docker
    executable: pip
    state: present
    
- name: Install docker-compose library
  delegate_to: "{{ honeypot.build.tanner.host }}"
  pip:
    name: docker-compose
    executable: pip
    state: present


- name: Create build directory on argon01
  delegate_to: "{{ honeypot.build.tanner.host }}"
  file:
    path: "{{ honeypot.build.tanner.build_dir }}"
    state: directory
    mode: '0755'

# - name: Clone Tanner repository on argon01
#   delegate_to: "{{ honeypot.build.tanner.host }}"
#   git:
#     repo: "{{ honeypot.build.tanner.repo_url }}"
#     dest: "{{ honeypot.build.tanner.build_dir }}"
#     version: "{{ honeypot.build.tanner.repo_version }}"
#     clone: yes
#     update: no

- name: Run docker-compose to build the container image
  delegate_to: "{{ honeypot.build.tanner.host }}"
  docker_compose:
    project_src: "{{ honeypot.build.tanner.build_dir }}/docker"
    project_name: tanner

- name: Push Tanner Docker image to registry on argon01
  delegate_to: "{{ honeypot.build.tanner.host }}"
  docker_image:
    name: "{{ honeypot.tanner.image_name }}"
    tag: "{{ honeypot.tanner.image_tag }}"
    push: yes

- name: Ensure required directories exist on pi4a
  delegate_to: "{{ honeypot.tanner.host }}"
  file:
    path: "{{ honeypot.tanner.data_dir }}"
    state: directory
    mode: '0755'

- name: Deploy and start Tanner Docker container on pi4a
  delegate_to: "{{ honeypot.tanner.host }}"
  docker_container:
    name: tanner
    image: "{{ honeypot.tanner.image_name }}:{{ honeypot.tanner.image_tag }}"
    volumes:
      - "{{ honeypot.tanner.data_dir }}:/data"
    networks:
      "{{ honeypot.tanner.network_name }}":
        ipv4_address: "{{ honeypot.tanner.tanner_ip }}"
    restart_policy: unless-stopped
