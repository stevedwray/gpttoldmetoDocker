---
- name: Include encrypted secret file
  include_vars: secret.yml

- name: Ensure Neo4j directories exist
  ansible.builtin.file:
    path: "{{ neo4j.volume }}/{{ item }}"
    state: directory
    owner: 7474
    group: 7474
  loop:
    - data
    - logs
    - conf
    - ssl/https
    - ssl/https/trusted
    - ssl/https/revoked
    - ssl/bolt
    - ssl/bolt/trusted
    - ssl/bolt/revoked

- name: Create private key for HTTPS self-signed certificate
  community.crypto.openssl_privatekey:
    path: "{{ neo4j.volume }}/ssl/https/private.key"
    type: RSA
    size: 2048
    mode: '0600'
    owner: 7474
    group: 7474
  ignore_errors: "{{ ansible_check_mode }}"

- name: Create certificate signing request (CSR) for HTTPS self-signed certificate
  community.crypto.openssl_csr:
    privatekey_path: "{{ neo4j.volume }}/ssl/https/private.key"
    path: "{{ neo4j.volume }}/ssl/https/certificate.csr"
    common_name: "{{ ssl_name }}"
    subject_alt_name:
      - "DNS:{{ ssl_name }}"
    owner: 7474
    group: 7474
  ignore_errors: "{{ ansible_check_mode }}"

- name: Create self-signed certificate from CSR for HTTPS
  community.crypto.x509_certificate:
    path: "{{ neo4j.volume }}/ssl/https/public.crt"
    privatekey_path: "{{ neo4j.volume }}/ssl/https/private.key"
    csr_path: "{{ neo4j.volume }}/ssl/https/certificate.csr"
    provider: selfsigned
    owner: 7474
    group: 7474
  ignore_errors: "{{ ansible_check_mode }}"
    
- name: Deploy Neo4j container
  community.docker.docker_compose:
    project_name: neo4j
    state: present
    definition:
      version: '3'
      services:
        neo4j:
          image: "{{ neo4j.image }}"
          environment:
            - "NEO4J_AUTH=neo4j/{{ neo4j_password }}"
            - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
            - NEO4J_dbms_connector_https_advertised__address=:7473
            - NEO4J_dbms_connector_https_enabled=true
            - NEO4J_dbms_connector_https_listen__address=:7473
            # bolt
            - NEO4J_dbms_ssl_policy_bolt_base__directory=/ssl/https
            - NEO4J_dbms_ssl_policy_bolt_certificate=public.crt
            - NEO4J_dbms_ssl_policy_bolt_client_auth=NONE
            - NEO4J_dbms_ssl_policy_bolt_enabled=true
            - NEO4J_dbms_ssl_policy_bolt_key=private.key
            - NEO4J_dbms_ssl_policy_bolt_tls__level=REQUIRED
            - NEO4J_dbms_ssl_policy_bolt_trust__all=true
            # https
            - NEO4J_dbms_ssl_policy_https_base__directory=/ssl/https
            - NEO4J_dbms_ssl_policy_https_certificate=public.crt
            - NEO4J_dbms_ssl_policy_https_enabled=true
            - NEO4J_dbms_ssl_policy_https_key=private.key
            - NEO4J_dbms_ssl_policy_https_trust__all=true
            # server
            - NEO4J_server_bolt_tls__level=REQUIRED
            - NEO4J_server_https_enabled=true

          volumes:
            - "{{ neo4j.volume }}/data:/data"
            - "{{ neo4j.volume }}/logs:/logs"
            - "{{ neo4j.volume }}/conf:/conf"
            - "{{ neo4j.volume }}/import:/var/lib/neo4j/import"
            - "{{ neo4j.volume }}/plugins:/plugins"
            - "{{ neo4j.volume }}/ssl:/ssl"
            - "{{ neo4j.volume }}/ssl/https/private.key:/ssl/var/lib/neo4j/certificates/bolt/private.key"
            - "{{ neo4j.volume }}/ssl/https/public.crt:/ssl/var/lib/neo4j/certificates/bolt/public.crt"
          networks:
            ipvlan_net:
              ipv4_address: "{{ neo4j.ip }}"
      networks: 
        ipvlan_net:
          external:
            name: ipvlan_net

            
